[{"/home/crownclown/Documentos/Blog front/Blog-Front2/src/index.js":"1","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/App.js":"2","/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/NewUserContainer.js":"3","/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/NewUser.js":"4","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/NewUserForm.js":"5","/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/PostPageContainer.js":"6","/home/crownclown/Documentos/Blog front/Blog-Front2/src/hooks/useFetch.js":"7","/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/PostPage.js":"8","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/Welcome.js":"9","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/PostList.js":"10","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/Post.js":"11"},{"size":267,"mtime":1630596402969,"results":"12","hashOfConfig":"13"},{"size":463,"mtime":1630377376659,"results":"14","hashOfConfig":"13"},{"size":1212,"mtime":1630361591060,"results":"15","hashOfConfig":"13"},{"size":251,"mtime":1630361591060,"results":"16","hashOfConfig":"13"},{"size":4418,"mtime":1630361591060,"results":"17","hashOfConfig":"13"},{"size":1128,"mtime":1630450940959,"results":"18","hashOfConfig":"13"},{"size":544,"mtime":1630453176479,"results":"19","hashOfConfig":"13"},{"size":300,"mtime":1630426854611,"results":"20","hashOfConfig":"13"},{"size":329,"mtime":1630384154873,"results":"21","hashOfConfig":"13"},{"size":489,"mtime":1630426962518,"results":"22","hashOfConfig":"13"},{"size":1570,"mtime":1630899855572,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"173zmle",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/home/crownclown/Documentos/Blog front/Blog-Front2/src/index.js",[],["49","50"],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/App.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/NewUserContainer.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/NewUser.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/NewUserForm.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/PostPageContainer.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/hooks/useFetch.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/pages/PostPage.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/Welcome.js",["51"],"import React from 'react'\nimport './styles/Welcome.css'\n\nconst Welcome = ({}) => ( //Adecuado para los modelos funcionales\n    <div className=\"container\">\n        <div className=\"Post-User-Info\">\n            <h1>Hello madafaca!</h1>\n            <p>Vamos a ver post de culos</p>\n        </div>\n    </div>\n)\n\nexport default Welcome","/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/PostList.js",[],"/home/crownclown/Documentos/Blog front/Blog-Front2/src/componentes/Post.js",["52","53"],"import React from 'react'\nimport './styles/Post.css'\nimport emptyImg from '../images/empty.png'\n\nconst Post = ({id,title,summary,image,user_key,categorie_key}) => (\n    \n    <div className=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <span class=\"border border-info border-2 rounded-2\">\n                <div className=\"card-body\">\n                    <img\n                        src={`http://res.cloudinary.com/daplasrzs/${image}`|| emptyImg}\n                        class=\"img-fluid rounded\"\n                    />\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\"><a href=\"#\">{title}</a></h4>\n                        <p class=\"card-text\"><font color=\"#006699\">{categorie_key.name}</font></p>\n                        <h6 class=\"card-text\">{summary}</h6>\n                        <span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\n                                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                                <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\n                            </svg>\n                            <span class=\"card-text\"><font color=\"#006699\"> {user_key.username}</font></span>\n                        </span>\n                    </div>\n                </div>\n            </span>\n        </div> \n    </div>   \n)\n\nexport default Post\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":18,"nodeType":"60","messageId":"61","endLine":4,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":11,"column":21,"nodeType":"64","endLine":14,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":16,"column":48,"nodeType":"64","endLine":16,"endColumn":60},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]