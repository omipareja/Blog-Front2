{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst Peticion = (url, config) => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n\n  const peticionasync = async () => {\n    try {\n      let response = await fetch(url, config);\n\n      if (response.ok) {\n        let json = await response.json();\n        setData(json);\n      } else {\n        setError(true);\n        let res_error = response.status;\n        setData(res_error);\n      }\n    } catch (error) {\n      alert(`Error-HTTP: ${error}`);\n    }\n  };\n\n  useEffect(() => {\n    peticionasync();\n  });\n  return {\n    data,\n    error\n  };\n};\n\n_s(Peticion, \"Iz4/wMOOCfy+K6t8ZeJYh/j3r3M=\");\n\n_c = Peticion;\nexport default Peticion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Peticion\");","map":{"version":3,"sources":["/home/juan/Documentos/compartido/frontend/src/hooks/peticiones.js"],"names":["useState","useEffect","Peticion","url","config","error","setError","data","setData","peticionasync","response","fetch","ok","json","res_error","status","alert"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAGA,MAAMC,QAAQ,GAAE,CAACC,GAAD,EAAKC,MAAL,KAAe;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;;AAGA,QAAMS,aAAa,GAAG,YAAW;AAC7B,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAKC,MAAL,CAA1B;;AACA,UAAGM,QAAQ,CAACE,EAAZ,EAAe;AACX,YAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAL,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH,OAHD,MAGK;AACDP,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,YAAIQ,SAAS,GAAGJ,QAAQ,CAACK,MAAzB;AACAP,QAAAA,OAAO,CAACM,SAAD,CAAP;AACH;AACJ,KAVD,CAUC,OAAMT,KAAN,EAAY;AACTW,MAAAA,KAAK,CAAE,eAAcX,KAAM,EAAtB,CAAL;AACH;AACJ,GAdD;;AAgBAJ,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,aAAa;AAChB,GAFQ,CAAT;AAMA,SAAM;AAACF,IAAAA,IAAD;AAAMF,IAAAA;AAAN,GAAN;AACH,CA5BD;;GAAMH,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\"\n\n\nconst Peticion =(url,config) =>{\n    const [error,setError]= useState(false)\n    const [data,setData] = useState([])\n\n\n    const peticionasync = async () =>{\n        try {\n            let response = await fetch(url,config)\n            if(response.ok){\n                let json = await response.json()\n                setData(json)\n            }else{\n                setError(true)\n                let res_error = response.status\n                setData(res_error)\n            }\n        }catch(error){\n            alert(`Error-HTTP: ${error}`)\n        }\n    }\n\n    useEffect(()=>{\n        peticionasync()\n    })\n\n    \n\n    return{data,error}\n}\n\nexport default Peticion"]},"metadata":{},"sourceType":"module"}