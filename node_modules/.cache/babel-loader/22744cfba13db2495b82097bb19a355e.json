{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst peticion = (url, config) => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const peticionasync = async () => {\n      try {\n        let response = await fetch(url, config);\n\n        if (response.ok) {\n          let json = await response.json();\n          setData(json);\n        } else {\n          setError(true);\n          let res_error = response.status;\n          setData(res_error);\n        }\n      } catch (error) {\n        alert(`Error-HTTP: ${response.status}`);\n      }\n    };\n\n    peticionasync();\n  }, [url, config]);\n  return {\n    data,\n    error\n  };\n};\n\n_s(peticion, \"Iz4/wMOOCfy+K6t8ZeJYh/j3r3M=\");\n\nexport default peticion;","map":{"version":3,"sources":["/home/juan/Documentos/compartido/frontend/src/hooks/peticiones.js"],"names":["useState","useEffect","peticion","url","config","error","setError","data","setData","peticionasync","response","fetch","ok","json","res_error","status","alert"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAGA,MAAMC,QAAQ,GAAE,CAACC,GAAD,EAAKC,MAAL,KAAe;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAK;AAEX,UAAMQ,aAAa,GAAG,YAAW;AAC7B,UAAI;AACA,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAKC,MAAL,CAA1B;;AACA,YAAGM,QAAQ,CAACE,EAAZ,EAAe;AACX,cAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAL,UAAAA,OAAO,CAACK,IAAD,CAAP;AACH,SAHD,MAGK;AACDP,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,cAAIQ,SAAS,GAAGJ,QAAQ,CAACK,MAAzB;AACAP,UAAAA,OAAO,CAACM,SAAD,CAAP;AACH;AACJ,OAVD,CAUC,OAAMT,KAAN,EAAY;AACTW,QAAAA,KAAK,CAAE,eAAcN,QAAQ,CAACK,MAAO,EAAhC,CAAL;AACH;AACJ,KAdD;;AAgBAN,IAAAA,aAAa;AAEhB,GApBQ,EAoBP,CAACN,GAAD,EAAKC,MAAL,CApBO,CAAT;AAsBA,SAAM;AAACG,IAAAA,IAAD;AAAMF,IAAAA;AAAN,GAAN;AACH,CA1BD;;GAAMH,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\"\n\n\nconst peticion =(url,config) =>{\n    const [error,setError]= useState(false)\n    const [data,setData] = useState([])\n    useEffect(() =>{\n\n        const peticionasync = async () =>{\n            try {\n                let response = await fetch(url,config)\n                if(response.ok){\n                    let json = await response.json()\n                    setData(json)\n                }else{\n                    setError(true)\n                    let res_error = response.status\n                    setData(res_error)\n                }\n            }catch(error){\n                alert(`Error-HTTP: ${response.status}`)\n            }\n        }\n\n        peticionasync()\n\n    },[url,config])\n\n    return{data,error}\n}\n\nexport default peticion"]},"metadata":{},"sourceType":"module"}