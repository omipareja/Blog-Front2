{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/*\nconst Peticion =(url,config) =>{\n    const [error,setError]= useState(false)\n    const [data,setData] = useState([])\n    useEffect(() =>{\n\n        const peticionasync = async () =>{\n            try {\n                let response = await fetch(url,config)\n                if(response.ok){\n                    let json = await response.json()\n                    setData(json)\n                }else{\n                    setError(true)\n                    let res_error = response.status\n                    setData(res_error)\n                }\n            }catch(error){\n                alert(`Error-HTTP: ${error}`)\n            }\n        }\n\n        peticionasync()\n\n    },[url,config])\n\n    return{data,error}\n}\n*/\n\nconst peticion = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    //remplaza el componentDidMount\n    const fetchResource = async () => {\n      try {\n        let res = await fetch(url);\n        let data = await res.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error);\n      }\n    };\n\n    fetchResource();\n  }, [url]); //el url es para pasarle parametros a use Effect\n\n  return {\n    data,\n    error\n  };\n};\n\n_s(peticion, \"lZa0Mk7v4sa9rlf6WSt5pwwYZLU=\");\n\nexport default Peticion;","map":{"version":3,"sources":["/home/juan/Documentos/compartido/frontend/src/hooks/peticiones.js"],"names":["useState","useEffect","peticion","url","data","setData","loading","setLoading","fetchResource","res","fetch","json","error","setError","Peticion"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAGC,GAAG,IAAG;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,IAAD,CAArC;AAGAC,EAAAA,SAAS,CAAC,MAAI;AAAE;AAEZ,UAAMO,aAAa,GAAG,YAAY;AAE9B,UAAI;AAEA,YAAIC,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAD,CAArB;AACA,YAAIC,IAAI,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAAjB;AAEAN,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,OARD,CAQE,OAAOK,KAAP,EAAa;AACXL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAM,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,KAdD;;AAgBAJ,IAAAA,aAAa;AAEhB,GApBQ,EAoBP,CAACL,GAAD,CApBO,CAAT,CANmB,CA0BX;;AAER,SAAO;AAACC,IAAAA,IAAD;AAAMQ,IAAAA;AAAN,GAAP;AACH,CA7BD;;GAAMV,Q;;AAgCN,eAAeY,QAAf","sourcesContent":["import { useState,useEffect } from \"react\"\n\n/*\nconst Peticion =(url,config) =>{\n    const [error,setError]= useState(false)\n    const [data,setData] = useState([])\n    useEffect(() =>{\n\n        const peticionasync = async () =>{\n            try {\n                let response = await fetch(url,config)\n                if(response.ok){\n                    let json = await response.json()\n                    setData(json)\n                }else{\n                    setError(true)\n                    let res_error = response.status\n                    setData(res_error)\n                }\n            }catch(error){\n                alert(`Error-HTTP: ${error}`)\n            }\n        }\n\n        peticionasync()\n\n    },[url,config])\n\n    return{data,error}\n}\n*/\n\n\nconst peticion = url =>{\n\n    const [data,setData] = useState([])\n    const [loading,setLoading] = useState(true)\n\n\n    useEffect(()=>{ //remplaza el componentDidMount\n\n        const fetchResource = async () => {\n\n            try {\n\n                let res = await fetch(url)\n                let data = await res.json()\n                \n                setData(data)\n                setLoading(false)\n\n            } catch (error){\n                setLoading(false)\n                setError(error)\n            }\n        }\n\n        fetchResource()\n\n    },[url])//el url es para pasarle parametros a use Effect\n\n    return {data,error}\n}\n\n\nexport default Peticion"]},"metadata":{},"sourceType":"module"}