{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/compartido/frontend/src/pages/NewUserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NewUSer from './NewUser';\nimport * as moment from 'moment';\nimport Swealert from '../hooks/validations';\nimport Peticion from '../hooks/peticiones';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewUserContainer = ({\n  history\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    email: '',\n    name: '',\n    apellido: '',\n    genero: '',\n    date_birth: '' //image: '',\n    //categoria_favorita: '',\n\n  });\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let validation = 0;\n    let username = form.username;\n    let password = form.password;\n    let date = form.date_birth;\n\n    if (username.length < 8) {\n      Swealert('Error En Username', 'El campo debe tener mas de  8 caracteres');\n    } else {\n      validation = validation + 1;\n    }\n\n    if (password.length < 8) {\n      Swealert('Error en la Contraseña', 'La contraseña debe ser mayor a 8 caracteres');\n    } else {\n      validation = validation + 1;\n    }\n\n    if (validation == 2) {\n      try {\n        let config = {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(form)\n        };\n        let response = await fetch('http://127.0.0.1:8000/user/user/', config);\n\n        if (response.ok) {\n          // si el HTTP-status es 200-299\n          // obtener cuerpo de la respuesta (método debajo)\n          let json = await response.json();\n          console.log(json);\n          Swealert('Alerta', json.message);\n          history.push('/login');\n        } else {\n          Swealert('Error', `Error-HTTP: ${response.status}`);\n        }\n      } catch (error) {\n        console.log('Entro al error');\n        console.log(error);\n      }\n    }\n  };\n\n  let url = 'http://127.0.0.1:8000/category/category';\n  const {\n    data,\n    error\n  } = Peticion(url);\n  console.log(data);\n\n  if (error == false) {\n    return /*#__PURE__*/_jsxDEV(NewUSer, {\n      form: form,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      categorias: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this);\n  }\n};\n\n_s(NewUserContainer, \"MYBCxfD6uVPy+6gbt6AbvNLEGLE=\");\n\n_c = NewUserContainer;\nexport default NewUserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserContainer\");","map":{"version":3,"sources":["/home/juan/Documentos/compartido/frontend/src/pages/NewUserContainer.js"],"names":["React","useState","NewUSer","moment","Swealert","Peticion","NewUserContainer","history","form","setForm","username","password","email","name","apellido","genero","date_birth","handleChange","e","target","value","handleSubmit","preventDefault","validation","date","length","config","method","headers","body","JSON","stringify","response","fetch","ok","json","console","log","message","push","status","error","url","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC;AAC5BS,IAAAA,QAAQ,EAAE,EADkB;AAE5BC,IAAAA,QAAQ,EAAE,EAFkB;AAG5BC,IAAAA,KAAK,EAAE,EAHqB;AAI5BC,IAAAA,IAAI,EAAE,EAJsB;AAK5BC,IAAAA,QAAQ,EAAE,EALkB;AAM5BC,IAAAA,MAAM,EAAE,EANoB;AAO5BC,IAAAA,UAAU,EAAE,EAPgB,CAQ5B;AACA;;AAT4B,GAAD,CAA/B;;AAaA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBT,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACU,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAFtB,KAAD,CAAP;AAIH,GALD;;AAQA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAU;AAE3BA,IAAAA,CAAC,CAACI,cAAF;AAEA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIb,QAAQ,GAAGF,IAAI,CAACE,QAApB;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AACA,QAAIa,IAAI,GAAGhB,IAAI,CAACQ,UAAhB;;AAIA,QAAGN,QAAQ,CAACe,MAAT,GAAkB,CAArB,EAAuB;AACnBrB,MAAAA,QAAQ,CAAC,mBAAD,EAAqB,0CAArB,CAAR;AACH,KAFD,MAGI;AACAmB,MAAAA,UAAU,GAAGA,UAAU,GAAC,CAAxB;AACH;;AAED,QAAGZ,QAAQ,CAACc,MAAT,GAAiB,CAApB,EAAuB;AACnBrB,MAAAA,QAAQ,CAAC,wBAAD,EAA0B,6CAA1B,CAAR;AACH,KAFD,MAGI;AACAmB,MAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACH;;AAED,QAAGA,UAAU,IAAI,CAAjB,EAAmB;AACf,UAAI;AAEA,YAAIG,MAAM,GAAG;AACTC,UAAAA,MAAM,EAAC,MADE;AAETC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX,WAFA;AAMTC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf;AANG,SAAb;AAQA,YAAIwB,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAoCP,MAApC,CAA1B;;AACA,YAAIM,QAAQ,CAACE,EAAb,EAAiB;AAAE;AACf;AACA,cAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA/B,UAAAA,QAAQ,CAAC,QAAD,EAAU+B,IAAI,CAACG,OAAf,CAAR;AACA/B,UAAAA,OAAO,CAACgC,IAAR,CAAa,QAAb;AACD,SANH,MAMS;AACLnC,UAAAA,QAAQ,CAAC,OAAD,EAAU,eAAc4B,QAAQ,CAACQ,MAAO,EAAxC,CAAR;AACD;AAEN,OArBD,CAqBC,OAAMC,KAAN,EAAY;AACTL,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ;AAGJ,GAtDD;;AAyDA,MAAIC,GAAG,GAAG,yCAAV;AACA,QAAM;AAACC,IAAAA,IAAD;AAAMF,IAAAA;AAAN,MAAepC,QAAQ,CAACqC,GAAD,CAA7B;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;;AACI,MAAGF,KAAK,IAAE,KAAV,EAAgB;AACZ,wBAAO,QAAC,OAAD;AACP,MAAA,IAAI,EAAGjC,IADA;AAEP,MAAA,QAAQ,EAAES,YAFH;AAGP,MAAA,QAAQ,EAAEI,YAHH;AAIP,MAAA,UAAU,EAAEsB;AAJL;AAAA;AAAA;AAAA;AAAA,YAAP;AAMP;AAGJ,CA7FD;;GAAMrC,gB;;KAAAA,gB;AA+FN,eAAeA,gBAAf","sourcesContent":["import React,{useState} from 'react'\nimport NewUSer from './NewUser'\nimport * as moment from 'moment'\nimport Swealert from '../hooks/validations'\nimport Peticion from '../hooks/peticiones'\n\nconst NewUserContainer = ({history}) => {\n\n    const [form,setForm] = useState({\n        username: '',\n        password: '',\n        email: '',\n        name: '',\n        apellido: '',\n        genero: '',\n        date_birth: '',\n        //image: '',\n        //categoria_favorita: '',\n\n    })\n\n    const handleChange = e => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const handleSubmit = async e =>{\n\n        e.preventDefault()\n\n        let validation = 0\n        let username = form.username\n        let password = form.password\n        let date = form.date_birth\n        \n\n\n        if(username.length < 8){\n            Swealert('Error En Username','El campo debe tener mas de  8 caracteres')\n        }\n        else{\n            validation = validation+1 \n        }\n        \n        if(password.length <8 ){\n            Swealert('Error en la Contraseña','La contraseña debe ser mayor a 8 caracteres')\n        }\n        else{\n            validation = validation + 1\n        }\n        \n        if(validation == 2){\n            try {\n\n                let config = {\n                    method:'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(form) \n                }\n                let response = await fetch('http://127.0.0.1:8000/user/user/',config)\n                if (response.ok) { // si el HTTP-status es 200-299\n                    // obtener cuerpo de la respuesta (método debajo)\n                    let json = await response.json();\n                    console.log(json)\n                    Swealert('Alerta',json.message)\n                    history.push('/login')\n                  } else {\n                    Swealert('Error',`Error-HTTP: ${response.status}`);\n                  }\n                \n            }catch(error){\n                console.log('Entro al error')\n                console.log(error)\n            }\n        }\n\n\n    }\n\n\n    let url = 'http://127.0.0.1:8000/category/category'\n    const {data,error} = Peticion(url)\n    console.log(data)\n        if(error==false){\n            return <NewUSer\n            form ={form}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n            categorias={data}\n        />\n    }\n\n\n}\n\nexport default NewUserContainer"]},"metadata":{},"sourceType":"module"}